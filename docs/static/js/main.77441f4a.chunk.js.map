{"version":3,"sources":["BarCodeScanner.js","index.js"],"names":["handleResize","width","document","documentElement","clientWidth","height","clientHeight","video","userRef","canvas","getElementById","videoWidth","videoHeight","style","init","a","window","onresize","navigator","mediaDevices","getUserMedia","audio","facingMode","max","mediaStream","srcObject","setAttribute","play","Promise","r","onloadedmetadata","render","symbols","footer","ctx","getContext","clearRect","firstChild","removeChild","lastChild","font","strokeStyle","fillStyle","lineWidth","i","length","sym","points","beginPath","j","x","y","moveTo","lineTo","closePath","stroke","fillText","div","createElement","className","innerText","typeName","decode","appendChild","scan","drawImage","imgData","getImageData","scanImageData","res","sleep","ms","setTimeout","body","console","error","main","BarCodeScanner","id","ReactDOM"],"mappings":"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","file":"static/js/main.77441f4a.chunk.js","sourcesContent":["import React, { userRef } from 'react';\nimport { scanImageData } from 'zbar.wasm';\n\nconst SCAN_PROID_MS = 800;\n\nconst handleResize = () => {\n    const width = document.documentElement.clientWidth;\n    const height = document.documentElement.clientHeight;\n    const video = userRef(null);\n\n    video.width = width;\n    video.height = height;\n\n    const canvas = document.getElementById('canvas');\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    if (width / video.videoWidth < height / video.videoHeight) {\n        canvas.style.width = '100vw';\n        canvas.style.height = 'auto';\n    } else {\n        canvas.style.width = 'auto';\n        canvas.style.height = '100vh';\n    }\n};\n\nconst init = async() => {\n    window.onresize = handleResize;\n    const mediaStream = await navigator.mediaDevices.getUserMedia({\n        audio: false,\n        video: {\n            facingMode: 'environment',\n            width: { max: 640 },\n            height: { max: 640 }\n        }\n    });\n    const video = document.getElementById('video');\n    video.srcObject = mediaStream;\n    video.setAttribute('playsinline', '');\n    video.play();\n    await new Promise(r => {\n        video.onloadedmetadata = r;\n    });\n    handleResize();\n};\n\nconst render = (symbols) => {\n    const canvas = document.getElementById('canvas');\n    const footer = document.getElementById('footer');\n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n    ctx.clearRect(0, 0, width, height);\n    while (footer.firstChild) {\n        footer.removeChild(footer.lastChild);\n    }\n    ctx.font = '20px serif';\n    ctx.strokeStyle = '#00ff00';\n    ctx.fillStyle = '#ff0000';\n    ctx.lineWidth = 6;\n    for (let i = 0; i < symbols.length; ++i) {\n        const sym = symbols[i];\n        const points = sym.points;\n        ctx.beginPath();\n        for (let j = 0; j < points.length; ++j) {\n            const { x, y } = points[j];\n            if (j === 0) {\n                ctx.moveTo(x, y);\n            } else {\n                ctx.lineTo(x, y);\n            }\n        }\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fillText('#' + i, points[0].x, points[0].y - 10);\n\n        const div = document.createElement('div');\n        div.className = 'footerItem';\n        div.innerText = `#${i}: Type: ${sym.typeName}; Value: \"${sym.decode()}\"`\n        footer.appendChild(div);\n    }\n};\n\nconst scan = async() => {\n    const canvas = document.createElement('canvas');\n    const video = document.getElementById('video');\n    const width = video.videoWidth;\n    const height = video.videoHeight;\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(video, 0, 0, width, height);\n    const imgData = ctx.getImageData(0, 0, width, height);\n    const res = await scanImageData(imgData);\n    // console.log(res, Date.now());\n    render(res);\n};\n\nconst sleep = ms => new Promise(r => { setTimeout(r, ms) });\n\nconst main = async() => {\n    try {\n        await init();\n        while (true) {\n            await scan();\n            await sleep(SCAN_PROID_MS);\n        }\n    } catch (err) {\n        const div = document.createElement('div');\n        div.className = 'full middle';\n        div.style = 'height: 72px; width: 100%; text-align: center; font-size: 36px';\n        div.innerText = 'Cannot get cammera: ' + err;\n        document.body.appendChild(div);\n        console.error(err);\n    }\n};\n\nmain();\n\n\nconst BarCodeScanner = () => {\n    return (\n      <>\n        <video id=\"video\" className=\"full\" > </video> \n        <canvas id = \"canvas\" className=\"full middle\"></canvas> \n\t  </ >\n\n    )\n}\n\nexport default BarCodeScanner;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BarCodeScanner from './BarCodeScanner';\n\nReactDOM.render(\n <BarCodeScanner />,\n document.getElementById('app')\n);"],"sourceRoot":""}