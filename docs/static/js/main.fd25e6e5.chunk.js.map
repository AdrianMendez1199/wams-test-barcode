{"version":3,"sources":["BarCodeScanner.js","index.js"],"names":["handleResize","width","document","documentElement","clientWidth","height","clientHeight","video","getElementById","canvas","videoWidth","videoHeight","style","init","a","window","onresize","navigator","mediaDevices","getUserMedia","audio","facingMode","max","mediaStream","srcObject","setAttribute","play","Promise","r","onloadedmetadata","render","symbols","footer","ctx","getContext","clearRect","firstChild","removeChild","lastChild","font","strokeStyle","fillStyle","lineWidth","i","length","sym","points","beginPath","j","x","y","moveTo","lineTo","closePath","stroke","fillText","div","createElement","className","innerText","typeName","decode","appendChild","scan","drawImage","imgData","getImageData","scanImageData","res","sleep","ms","setTimeout","body","console","error","main","BarCodeScanner","id","class","ReactDOM"],"mappings":"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","file":"static/js/main.fd25e6e5.chunk.js","sourcesContent":["import React from 'react';\nimport { scanImageData } from 'zbar.wasm';\n\nconst SCAN_PROID_MS = 800;\n\nconst handleResize = () => {\n\n    const width = document.documentElement.clientWidth;\n    const height = document.documentElement.clientHeight;\n\n    const video = document.getElementById('video');\n\n    video.width = width;\n    video.height = height;\n\n    const canvas = document.getElementById('canvas');\n    \n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    if (width / video.videoWidth < height / video.videoHeight) {\n        canvas.style.width = '100vw';\n        canvas.style.height = 'auto';\n    } else {\n        canvas.style.width = 'auto';\n        canvas.style.height = '100vh';\n    }\n};\n\nconst init = async() => {\n    window.onresize = handleResize;\n    const mediaStream = await navigator.mediaDevices.getUserMedia({\n        audio: false,\n        video: {\n            facingMode: 'environment',\n            width: { max: 640 },\n            height: { max: 640 }\n        }\n    });\n    \n    const video = document.getElementById('video');\n    \n    video.srcObject = mediaStream;\n    video.setAttribute('playsinline',  null);\n    video.play();\n\n    await new Promise(r => {\n        video.onloadedmetadata = r;\n    });\n    handleResize();\n};\n\nconst render = (symbols) => {\n    \n    const canvas = document.getElementById('canvas');\n    const footer = document.getElementById('footer');\n    \n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n\n    ctx.clearRect(0, 0, width, height);\n    while (footer.firstChild) {\n        footer.removeChild(footer.lastChild);\n    }\n    ctx.font = '20px serif';\n    ctx.strokeStyle = '#00ff00';\n    ctx.fillStyle = '#ff0000';\n    ctx.lineWidth = 6;\n    for (let i = 0; i < symbols.length; ++i) {\n        const sym = symbols[i];\n        const points = sym.points;\n        ctx.beginPath();\n        for (let j = 0; j < points.length; ++j) {\n            const { x, y } = points[j];\n            if (j === 0) {\n                ctx.moveTo(x, y);\n            } else {\n                ctx.lineTo(x, y);\n            }\n        }\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fillText('#' + i, points[0].x, points[0].y - 10);\n\n        const div = document.createElement('div');\n        div.className = 'footerItem';\n        div.innerText = `#${i}: Type: ${sym.typeName}; Value: \"${sym.decode()}\"`\n        footer.appendChild(div);\n    }\n};\n\nconst scan = async() => {\n    const canvas = document.createElement('canvas');\n    const video = document.getElementById('video');\n\n    const width = video.videoWidth;\n    const height = video.videoHeight;\n    \n    canvas.width = width;\n    canvas.height = height;\n    \n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(video, 0, 0, width, height);\n    const imgData = ctx.getImageData(0, 0, width, height);\n    const res = await scanImageData(imgData);\n    // console.log(res, Date.now());\n    render(res);\n};\n\nconst sleep = ms => new Promise(r => { setTimeout(r, ms) });\n\nconst main = async() => {\n    try {\n        await init();\n        while (true) {\n            await scan();\n            await sleep(SCAN_PROID_MS);\n        }\n    } catch (err) {\n\n        const div = document.createElement('div');\n        div.className = 'full middle';\n        div.style = 'height: 72px; width: 100%; text-align: center; font-size: 36px';\n        div.innerText = 'Cannot get cammera: ' + err;\n        document.body.appendChild(div);\n        console.error(err);\n\n    }\n};\n\nmain();\n\n\nconst BarCodeScanner = () => {\n    return (\n      <>\n        <video id=\"video\" className=\"full\"> </video> \n        <canvas id=\"canvas\" className=\"full middle\"></canvas> \n        <div id=\"footer\" class=\"full\">\n            <div class=\"footerItem\">AAA</div>\n            <div class=\"footerItem\">BBB</div>\n        </div>\n\t  </ >\n\n    )\n}\n\nexport default BarCodeScanner;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BarCodeScanner from './BarCodeScanner';\n\nReactDOM.render(\n <BarCodeScanner />,\n document.getElementById('app')\n);"],"sourceRoot":""}